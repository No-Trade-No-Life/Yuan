name: CI
on:
  pull_request:
    branches: ['main']

  workflow_call:
    inputs:
      rebuild:
        type: boolean
        description: 'Rebuild all images'
        required: false
        default: false
    secrets:
      NPM_AUTH_TOKEN:
        description: 'NPM Auth Token'
        required: true
    outputs:
      bake_file_existence:
        description: 'Docker bake file existence'
        value: ${{ jobs.build.outputs.bake_file_existence}}

jobs:
  build:
    if: contains(github.event.pull_request.labels.*.name, 'skip-ci') == false
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: timescale/timescaledb-ha:pg17
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      node-unit:
        image: ghcr.io/no-trade-no-life/node-unit:0.11.2
        env:
          POSTGRES_URI: 'postgresql://postgres:postgres@postgres:5432/postgres'
        options: >-
          --health-cmd "grep 'Terminal terminalInfo pushed' /tmp/yuants/node-unit/logs/local-postgres-storage.log"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 8888:8888
    outputs:
      bake_file_existence: ${{ steps.bake_file_existence.outputs.files_exists }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Git config user
        uses: snow-actions/git-config-user@v1.0.0
        with:
          name: NTNL Infra # Service Account's Name
          email: infra@ntnl.io # Service Account's Email Address
      - uses: actions/setup-node@v4
        with:
          node-version: 22.14.0

      - name: Cache Rush
        uses: actions/cache@v4
        with:
          path: |
            common/temp/install-run
            ~/.rush
          key: ${{ runner.os }}-${{ hashFiles('rush.json') }}

      - name: Cache Rush Build Cache
        uses: actions/cache@v4
        with:
          path: |
            common/temp/build-cache
          key: ${{ runner.os }}-rush-build-cache-${{ github.sha}}
          restore-keys: |
            ${{ runner.os }}-rush-build-cache-

      - name: Cache pnpm
        uses: actions/cache@v4
        with:
          path: |
            common/temp/pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Verify Change Logs
        run: node common/scripts/install-run-rush.js change --verify
      - name: Rush Install
        run: node common/scripts/install-run-rush.js install

      - name: Rush rebuild
        if: ${{ inputs.rebuild }}
        env:
          REGISTRY: ghcr.io
          REGISTRY_NAMESPACE: no-trade-no-life
        run: node common/scripts/install-run-rush.js rebuild --verbose

      - name: Rush build
        if: ${{ !inputs.rebuild }}
        env:
          REGISTRY: ghcr.io
          REGISTRY_NAMESPACE: no-trade-no-life
          NODE_OPTIONS: '--max-old-space-size=8192'
        run: node common/scripts/install-run-rush.js build --verbose

      - name: prune rush build cache
        run: node common/scripts/prune-cache.js --ci-run '^[a-zA-Z0-9-+]+' common/temp/build-cache

      # Migration e2e smoke tests
      - name: Run migration smoke tests
        run: |
          node ./lib/cli.js
        working-directory: ./tools/sql-migration
        env:
          HOST_URL: 'ws://localhost:8888'
          SQL_DIR: './sql'

      - name: Check docker bake file existence
        id: bake_file_existence
        uses: andstor/file-existence-action@v2
        with:
          files: './common/temp/docker-bake.json'

      - name: package docker deploy artifacts
        if: ${{ steps.bake_file_existence.outputs.files_exists == 'true' }}
        run: |
          tar --use-compress-program=pigz -cvf ./common/temp/docker-deploy.tar.gz \
            ./common/temp/docker-bake.json \
            ./common/temp/out

      - name: Upload docker artifacts
        uses: actions/upload-artifact@v4
        if: ${{ steps.bake_file_existence.outputs.files_exists == 'true' }}
        with:
          name: docker-artifacts
          retention-days: 1
          path: |
            ./common/temp/docker-deploy.tar.gz

      - name: Upload web artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-artifacts
          retention-days: 1
          path: |
            ./ui/web/dist
          if-no-files-found: error

      - name: Upload docs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs-artifacts
          retention-days: 1
          path: |
            ./ui/docs/build
          if-no-files-found: error

      - name: Publish NPM Package
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: node common/scripts/install-run-rush.js publish -p --include-all
