import { JSONSchema7 } from 'json-schema';
export {
  IAccountInfo,
  IAccountMoney,
  IDataRecord,
  IOrder,
  IPeriod,
  IPosition,
  IProduct,
  ITick,
  OrderDirection,
  OrderStatus,
  OrderType,
  PositionVariant,
} from '@yuants/data-model';

/**
 * 终端基本信息
 *
 * @public
 */
export interface ITerminalInfo {
  /**
   * Terminal ID
   * 终端 ID
   *
   * Reported by the terminal, cannot be duplicated, required to be readable, and specified or generated by the terminal.
   * 终端上报，不可重复，要求可读，终端指定或生成。
   *
   * It is recommended to specify all TERMINAL_ID through environment variables in the project. If not, it can be fallback to the generated one.
   * 工程上建议所有的 TERMINAL_ID 可以通过环境变量指定，如果没有，可以 fallback 到生成的。
   */
  terminal_id: string;

  /**
   * Terminal startup timestamp
   * 终端本次启动的时间戳
   *
   * Used to calculate uptime_in_ms = Date.now() - start_timestamp_in_ms
   * 用于计算 uptime_in_ms = Date.now() - start_timestamp_in_ms
   *
   * When empty, it is equivalent to Date.now()
   * 为空时，等同于 Date.now()
   */
  start_timestamp_in_ms?: number;

  /**
   * Terminal Information Update Timestamp
   */
  updated_at?: number;

  /**
   * Terminal's subscriptions
   *
   * terminal itself is a consumer.
   *
   * map provider_terminal_id to channel_id[]
   */
  subscriptions?: Record<string, string[]>;

  /**
   * Terminal service name
   * 终端服务名称
   *
   * Can be duplicated, readable by humans
   * 可重复, 人类可读
   */
  name?: string;

  /**
   * List of service metadata provided by the terminal
   * 终端提供的服务元信息列表
   *
   * @deprecated - use serviceInfo instead
   */
  services?: Array<{ account_id?: string; datasource_id?: string; storage?: {} }>;

  /**
   * Service information provided by the terminal
   * 终端提供的服务信息
   */
  serviceInfo?: Record<
    string,
    {
      /**
       * Service name
       * 服务的名称
       */
      method: string;
      /**
       * The message must conform to this schema for the server to process it (JSON Schema)
       * 消息符合此模式时，服务端才会处理
       */
      schema: JSONSchema7;
    }
  >;

  /** Provider Channel ID Schema */
  channelIdSchemas?: JSONSchema7[];

  /**
   * If client terminal wants to send a request to a server terminal, it needs to know the server terminal id.
   *
   * Client should check the terminal candidates before sending a request.
   *
   * If a terminal's discriminator matches the request, it is a candidate.
   *
   * If multiple terminals are candidates, the client can choose anyone to send the request.
   *
   * If the discriminator is undefined, it means that the terminal's id should be explicitly specified when sending a request.
   *
   * @deprecated - use serviceInfo instead
   */
  discriminator?: JSONSchema7;

  /**
   * Status text
   * 状态文字
   *
   * Short, human-readable
   * 简短的，人类可读的
   *
   * Conventionally, it is initialized to "INIT" at startup;
   * 约定，启动时，初始化为 "INIT";
   *
   * "OK" is the normal value for everything else.
   * 约定 "OK" 为一切正常的取值，其余的都是不正常。
   */
  status?: string;
  /**
   * Maintenance ID of the terminal
   * 终端的维护者 ID
   */
  owner?: string;
  /**
   * Environment ID of the terminal
   * 部署环境 ID
   */
  env?: string;
  /**
   * Measurement of network latency from the host to the terminal
   * 度量主机到终端的网络延迟
   *
   * Maintained by the host
   * 由主机维护此值
   *
   * null means unreachable
   * 空值表示无法 Ping 通
   * @deprecated "NO USED"
   */
  ping?: number;
}
